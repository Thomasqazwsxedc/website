{"remainingRequest":"/Users/thomaslin/Documents/GitHub/website/node_modules/babel-loader/lib/index.js!/Users/thomaslin/Documents/GitHub/website/node_modules/eslint-loader/index.js??ref--13-0!/Users/thomaslin/Documents/GitHub/website/src/window-scroll-position.js","dependencies":[{"path":"/Users/thomaslin/Documents/GitHub/website/src/window-scroll-position.js","mtime":1585171320844},{"path":"/Users/thomaslin/Documents/GitHub/website/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/thomaslin/Documents/GitHub/website/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/thomaslin/Documents/GitHub/website/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9kZWZpbmVQcm9wZXJ0eSBmcm9tICIvVXNlcnMvdGhvbWFzbGluL0RvY3VtZW50cy9HaXRIdWIvd2Vic2l0ZS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZGVmaW5lUHJvcGVydHkiOwpleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiB3aW5kb3dTY3JvbGxQb3NpdGlvbihwcm9wZXJ0eU5hbWUpIHsKICByZXR1cm4gewogICAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgICAgcmV0dXJuIF9kZWZpbmVQcm9wZXJ0eSh7fSwgcHJvcGVydHlOYW1lLCBbMCwgMF0pOwogICAgfSwKICAgIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICAvLyBPbmx5IGV4ZWN1dGUgdGhpcyBjb2RlIG9uIHRoZSBjbGllbnQgc2lkZSwgc2VydmVyIHN0aWNrcyB0byBbMCwgMF0KICAgICAgaWYgKCF0aGlzLiRpc1NlcnZlcikgewogICAgICAgIHRoaXMuX3Njcm9sbExpc3RlbmVyID0gZnVuY3Rpb24gKCkgewogICAgICAgICAgLy8gd2luZG93LnBhZ2VYL1lPZmZzZXQgaXMgZXF1aXZhbGVudCB0byB3aW5kb3cuc2Nyb2xsWC9ZLCBidXQgd29ya3MgaW4gSUUKICAgICAgICAgIC8vIFdlIHJvdW5kIHZhbHVlcyBiZWNhdXNlIGhpZ2gtRFBJIGRldmllcyBjYW4gcHJvdmlkZSBzb21lIHJlYWxseSBuYXN0eSBzdWJwaXhlbCB2YWx1ZXMKICAgICAgICAgIF90aGlzW3Byb3BlcnR5TmFtZV0gPSBbTWF0aC5yb3VuZCh3aW5kb3cucGFnZVhPZmZzZXQpLCBNYXRoLnJvdW5kKHdpbmRvdy5wYWdlWU9mZnNldCldOwogICAgICAgIH07IC8vIENhbGwgbGlzdGVuZXIgb25jZSB0byBkZXRlY3QgaW5pdGlhbCBwb3NpdGlvbgoKCiAgICAgICAgdGhpcy5fc2Nyb2xsTGlzdGVuZXIoKTsgLy8gV2hlbiBzY3JvbGxpbmcsIHVwZGF0ZSB0aGUgcG9zaXRpb24KCgogICAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdzY3JvbGwnLCB0aGlzLl9zY3JvbGxMaXN0ZW5lcik7CiAgICAgIH0KICAgIH0sCiAgICBiZWZvcmVEZXN0cm95OiBmdW5jdGlvbiBiZWZvcmVEZXN0cm95KCkgewogICAgICAvLyBEZXRhY2ggdGhlIGxpc3RlbmVyIHdoZW4gdGhlIGNvbXBvbmVudCBpcyBnb25lCiAgICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCdzY3JvbGwnLCB0aGlzLl9zY3JvbGxMaXN0ZW5lcik7CiAgICB9CiAgfTsKfQ=="},{"version":3,"sources":["/Users/thomaslin/Documents/GitHub/website/src/window-scroll-position.js"],"names":["windowScrollPosition","propertyName","data","created","$isServer","_scrollListener","Math","round","window","pageXOffset","pageYOffset","addEventListener","beforeDestroy","removeEventListener"],"mappings":";AAAA,eAAe,SAASA,oBAAT,CAA8BC,YAA9B,EAA4C;AACvD,SAAO;AACHC,IAAAA,IADG,kBACI;AACH,iCAEKD,YAFL,EAEoB,CAAC,CAAD,EAAI,CAAJ,CAFpB;AAIH,KANE;AAOHE,IAAAA,OAPG,qBAOO;AAAA;;AACN;AACA,UAAI,CAAC,KAAKC,SAAV,EAAqB;AACjB,aAAKC,eAAL,GAAuB,YAAM;AACzB;AACA;AACA,UAAA,KAAI,CAACJ,YAAD,CAAJ,GAAqB,CACjBK,IAAI,CAACC,KAAL,CAAWC,MAAM,CAACC,WAAlB,CADiB,EAEjBH,IAAI,CAACC,KAAL,CAAWC,MAAM,CAACE,WAAlB,CAFiB,CAArB;AAIH,SAPD,CADiB,CAUjB;;;AACA,aAAKL,eAAL,GAXiB,CAajB;;;AACAG,QAAAA,MAAM,CAACG,gBAAP,CAAwB,QAAxB,EAAkC,KAAKN,eAAvC;AACH;AACJ,KAzBE;AA0BHO,IAAAA,aA1BG,2BA0Ba;AACZ;AACAJ,MAAAA,MAAM,CAACK,mBAAP,CAA2B,QAA3B,EAAqC,KAAKR,eAA1C;AACH;AA7BE,GAAP;AA+BH","sourcesContent":["export default function windowScrollPosition(propertyName) {\n    return {\n        data() {\n            return {\n                // Initialize scroll position at [0, 0]\n                [propertyName]: [0, 0]\n            }\n        },\n        created() {\n            // Only execute this code on the client side, server sticks to [0, 0]\n            if (!this.$isServer) {\n                this._scrollListener = () => {\n                    // window.pageX/YOffset is equivalent to window.scrollX/Y, but works in IE\n                    // We round values because high-DPI devies can provide some really nasty subpixel values\n                    this[propertyName] = [\n                        Math.round(window.pageXOffset),\n                        Math.round(window.pageYOffset)\n                    ]\n                }\n\n                // Call listener once to detect initial position\n                this._scrollListener()\n\n                // When scrolling, update the position\n                window.addEventListener('scroll', this._scrollListener)\n            }\n        },\n        beforeDestroy() {\n            // Detach the listener when the component is gone\n            window.removeEventListener('scroll', this._scrollListener)\n        }\n    }\n}\n"]}]}